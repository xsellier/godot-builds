language: cpp
sudo: required
dist: trusty
osx_image: xcode9.2
branches:
  except:
  - master
  - 2.0
  - 2.1
compiler:
- gcc
- clang
os:
- linux
- osx
services:
- docker
env:
  global:
  - BUILD_REVISION=build2
  - OPTIONS="builtin_libpng=yes builtin_openssl=yes builtin_zlib=yes"
  - SCONS="scons -j2 verbose=no warnings=no progress=no"
  matrix:
  - PLATFORM=iphone TARGET=release
  - PLATFORM=iphone TARGET=release_debug
  - PLATFORM=osx BITS=fat TOOLS=yes TARGET=release_debug
  - PLATFORM=osx BITS=fat TOOLS=no TARGET=release
  - PLATFORM=osx BITS=fat TOOLS=no TARGET=release_debug
matrix:
  exclude:
  - os: linux
    env: PLATFORM=android TARGET=release ANDROID_ARCH=armv7
  - os: linux
    env: PLATFORM=android TARGET=release ANDROID_ARCH=arm64v8
  - os: linux
    env: PLATFORM=android TARGET=release ANDROID_ARCH=x86
  - os: linux
    env: PLATFORM=android TARGET=release_debug ANDROID_ARCH=armv7
  - os: linux
    env: PLATFORM=android TARGET=release_debug ANDROID_ARCH=arm64v8
  - os: linux
    env: PLATFORM=android TARGET=release_debug ANDROID_ARCH=x86
  - os: linux
    env: PLATFORM=iphone TARGET=release
  - os: linux
    env: PLATFORM=iphone TARGET=release_debug
  - os: linux
    env: PLATFORM=osx BITS=fat TOOLS=yes TARGET=release_debug
  - os: linux
    env: PLATFORM=osx BITS=fat TOOLS=no TARGET=release
  - os: linux
    env: PLATFORM=osx BITS=fat TOOLS=no TARGET=release_debug
  - os: osx
    env: PLATFORM=javascript TARGET=release
  - os: osx
    env: PLATFORM=javascript TARGET=release_debug
  - os: osx
    env: PLATFORM=server BITS=64 TOOLS=yes TARGET=release_debug
  - os: osx
    env: PLATFORM=x11 BITS=32 TOOLS=yes TARGET=release_debug
  - os: osx
    env: PLATFORM=x11 BITS=32 TOOLS=no TARGET=release
  - os: osx
    env: PLATFORM=x11 BITS=32 TOOLS=no TARGET=release_debug
  - os: osx
    env: PLATFORM=x11 BITS=64 TOOLS=yes TARGET=release_debug
  - os: osx
    env: PLATFORM=x11 BITS=64 TOOLS=no TARGET=release
  - os: osx
    env: PLATFORM=x11 BITS=64 TOOLS=no TARGET=release_debug
  - compiler: gcc
    env: PLATFORM=iphone TARGET=release
  - compiler: gcc
    env: PLATFORM=iphone TARGET=release_debug
  - compiler: gcc
    env: PLATFORM=javascript TARGET=release
  - compiler: gcc
    env: PLATFORM=javascript TARGET=release_debug
  - compiler: gcc
    env: PLATFORM=osx BITS=fat TOOLS=yes TARGET=release_debug
  - compiler: gcc
    env: PLATFORM=osx BITS=fat TOOLS=no TARGET=release
  - compiler: gcc
    env: PLATFORM=osx BITS=fat TOOLS=no TARGET=release_debug
  - compiler: clang
    env: PLATFORM=android TARGET=release ANDROID_ARCH=armv7
  - compiler: clang
    env: PLATFORM=android TARGET=release ANDROID_ARCH=arm64v8
  - compiler: clang
    env: PLATFORM=android TARGET=release ANDROID_ARCH=x86
  - compiler: clang
    env: PLATFORM=android TARGET=release_debug ANDROID_ARCH=armv7
  - compiler: clang
    env: PLATFORM=android TARGET=release_debug ANDROID_ARCH=arm64v8
  - compiler: clang
    env: PLATFORM=android TARGET=release_debug ANDROID_ARCH=x86
  - compiler: clang
    env: PLATFORM=server BITS=64 TOOLS=yes TARGET=release_debug
  - compiler: clang
    env: PLATFORM=x11 BITS=32 TOOLS=yes TARGET=release_debug
  - compiler: clang
    env: PLATFORM=x11 BITS=32 TOOLS=no TARGET=release
  - compiler: clang
    env: PLATFORM=x11 BITS=32 TOOLS=no TARGET=release_debug
  - compiler: clang
    env: PLATFORM=x11 BITS=64 TOOLS=yes TARGET=release_debug
  - compiler: clang
    env: PLATFORM=x11 BITS=64 TOOLS=no TARGET=release
  - compiler: clang
    env: PLATFORM=x11 BITS=64 TOOLS=no TARGET=release_debug
before_script:
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update -qq; sudo apt-get install
  -y scons pkg-config build-essential; fi;
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; brew install scons; fi;
- if [ "$TRAVIS_OS_NAME" = "osx" ] && [ "$PLATFORM" = "android" ]; then brew tap caskroom/cask;
  brew cask install android-sdk; export ANDROID_HOME=/usr/local/share/android-sdk;
  wget https://dl.google.com/android/repository/android-ndk-r17-darwin-x86_64.zip;
  unzip -d $HOME android-ndk-r17-darwin-x86_64.zip | grep -v "inflating:" | grep -v
  "creating:"; export ANDROID_NDK_ROOT="$HOME/android-ndk-r17"; fi;
- if [ "$PLATFORM" = "x11" ] || [ "$PLATFORM" = "server" ]; then sudo rm -f /etc/apt/sources.list.d/*.list;
  if [ "$BITS" = "64" ]; then sudo apt-get install -y libx11-dev libxcursor-dev libxrandr-dev
  libasound2-dev libpulse-dev libfreetype6-dev libgl1-mesa-dev libglu1-mesa-dev libxi-dev
  libxinerama-dev; else sudo dpkg --add-architecture i386; sudo apt-get update -qq;
  sudo apt-get install -y gcc-multilib g++-multilib; sudo apt-get install -y pkg-config:i386
  libx11-dev:i386 libxcursor-dev:i386 libxrandr-dev:i386 libglib2.0-dev:i386 libasound2-dev:i386
  libpulse-dev:i386 libpng-dev:i386 libfreetype6-dev:i386 libgl1-mesa-dev:i386 libglu1-mesa-dev:i386
  libxi-dev:i386 libxinerama-dev:i386; fi; fi;
- if [ "$PLATFORM" = "javascript" ]; then docker run -dit --name emscripten -v $(pwd)/godot:/src
  trzeci/emscripten-slim sh; docker exec -it emscripten apt-get update -qq; docker
  exec -it emscripten apt-get install -y scons; fi;
script:
- cd godot; for patch in $(find ../patches -type f); do git apply $patch; done;
- git rev-parse HEAD;
- if [ "$PLATFORM" = "osx" ]; then $SCONS platform=$PLATFORM CXX=$CXX $OPTIONS tools=$TOOLS
  bits=$BITS target=$TARGET; fi;
- if [ "$PLATFORM" = "x11" -o "$PLATFORM" = "server" ]; then $SCONS platform=$PLATFORM
  CC=$CC CXX=$CXX $OPTIONS tools=$TOOLS bits=$BITS target=$TARGET use_static_cpp=yes;
  fi;
- if [ "$PLATFORM" = "android" ]; then $SCONS platform=$PLATFORM CXX=$CXX $OPTIONS
  target=$TARGET android_arch=$ANDROID_ARCH; fi;
- if [ "$PLATFORM" = "iphone" ]; then $SCONS platform=$PLATFORM CXX=$CXX $OPTIONS
  arch=arm target=$TARGET; $SCONS platform=$PLATFORM CXX=$CXX $OPTIONS arch=arm64
  target=$TARGET; fi;
- if [ "$PLATFORM" = "javascript" ]; then docker exec -u `id -u` -it emscripten $SCONS
  platform=$PLATFORM CXX=$CXX $OPTIONS target=$TARGET; fi;
before_deploy:
- if [ "$PLATFORM" = "iphone" ]; then if [ "$TARGET" = "release" ]; then target_tag="opt";
  else target_tag="opt.debug"; fi; lipo -create -arch armv7 bin/godot.iphone.$target_tag.arm
  -arch arm64 bin/godot.iphone.$target_tag.arm64 -output bin/godot.iphone.$target_tag.universal;
  rm -rf bin/godot.iphone.$target_tag.arm*; fi;
- if [ "$PLATFORM" = "javascript" ]; then if [ "$TARGET" = "release" ]; then target_tag="opt";
  else target_tag="opt.debug"; fi; cp misc/dist/html/default.html godot.html; cp -f
  bin/godot.javascript.$target_tag.asm.js godot.asm.js; cp -f bin/godot.javascript.$target_tag.js
  godot.js; cp -f bin/godot.javascript.$target_tag.html.mem godot.mem; zip bin/godot.javascript.$target_tag.zip
  godot.asm.js godot.js godot.mem godot.html; rm -f bin/godot.javascript.$target_tag.asm.js;
  rm -f bin/godot.javascript.$target_tag.js; rm -f bin/godot.javascript.$target_tag.html*;
  fi;
- if [ "$PLATFORM" = "android" ]; then if [ "$TARGET" = "release" ]; then target_tag="release";
  else target_tag="debug"; fi; if [ "$ANDROID_ARCH" = "armv7" ]; then android_arch="armeabi-v7a";
  elif [ "$ANDROID_ARCH" = "arm64v8" ]; then android_arch="arm64-v8a"; else android_arch="x86";
  fi; cp platform/android/java/libs/$target_tag/$android_arch/libgodot_android.so
  bin/libgodot.android.opt.$target_tag.$android_arch.so; fi;
- if [ "$PLATFORM" = "osx" ]; then rm -rf bin/godot.osx.*.dSYM; fi;
deploy:
  provider: releases
  api_key:
    secure: HsWgN3KouG9wRtk3P2VEiyaNOqeXnFTv0sbPURytggdxKe+EHMhT2ac9LLRJ82ZB9I++wnlqbNNwOnnO7bbmOZ8oE+04qb7K7n4CFQWaszgwMZxnvkryEXORE3wReAo8YafP/r6cEWw3DkQjc4dtRYJwTzeqhjrxJHrqnaTPHlh5h5xgSQJhGKJZRUVAbEwm4+MtqybcvdSXhgLMzP55KWJ3VKBaQs8MDRvtkux67fmOwv6r2klqlxPNVvifvEEcVBWkVZq5gRadXXKCgWDAhscOWDrujIw0GPyXdT1T1SfKt0ZRxfS7aOPTrBvZfBww8IWbmu+W3+Kd5TPueFM2VoYu4KmLFE/X7ea8eCZ0q+Qyv4XPXEwdz2w9dB284sNQbtxYDSqOZxoULqBei6GsvAA2fBc0MjdwNEhZ8byYG4vSYQmIWZpbVSm0V8sNcBbeyffC7Kua9Tgpd5ERikGIm8qvoC5gwZUQ0yHTUPvgsAIteaeMYAqtPJwLALqfNtZS9iOO0HwW+e5jRIWyZrLmKc7ze+2qvmsXvjzqA15MfbIza01YbBuH7kTZAnhEt4jc99MLycphwjGDy2tTTOHZ84PBS5VszgjN2BIcvudjmhympM598Lp8fDeL+nQ/6m5cJPH1LyG84lC3LT1+fPC9UucGyVGlXfYb3i9Bb+doT94=
  file_glob: true
  file: bin/*godot*.$PLATFORM.opt.*
  skip_cleanup: true
  on:
    repo: xsellier/godot-builds
    tags: true
